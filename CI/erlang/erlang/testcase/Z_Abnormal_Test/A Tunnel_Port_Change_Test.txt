*** Settings ***
Resource          ../resource/SshKeyword.txt
Resource          ../resource/UranusKeyword.txt
Library           ../../libs/configCenter/ConsulKeyword.py

*** Variables ***
${exec_time}      146
${handover_port_log}    handover_port.log

*** Test Cases ***
Block_POP_port_CPE_6868_Change_Tunnel
    [Tags]    SDWANDEV-3682    abnormal
    ${pop_port}=    get_pop_tunnel_port_from_pop    remote    remote
    ssh_pc    remote
    Write    rm -rf ${handover_port_log}
    Write    ping -M do &{local_pc}[inner_ip] -c ${exec_time} -i 0.2 > ${handover_port_log} 2>&1 &
    block_cpe_pop_port    &{remote_switch}[ip]/29    ${pop_port}    &{local_switch}[ip]
    ssh_pc    remote
    run keyword and continue on failure    Get Valid Ping Logs_loss_less_than    ${handover_port_log}    91
    run keyword and continue on failure    icmp_last_packet_ok    ${handover_port_log}
    ${pop_port2}=    get_pop_tunnel_port_from_pop    remote    remote
    should not be equal    ${pop_port2}    ${pop_port}
    [Teardown]    Teardown_TC_config

Block_CPE_port_CPE_Change_Tunnel
    [Tags]    SDWANDEV-3684    abnormal
    ${ports_1}=    get_cpe_tunnel_port_from_cpe    changsha    &{remote_pop}[ne_id]
    ${ports_2}=    get_cpe_tunnel_port_from_cpe    changsha    &{local_pop}[ne_id]
    ${ports_3}=    get_cpe_tunnel_port_from_cpe    changsha    &{nanjing_cpe}[chassis_id]
    ${ports}=    combine lists    ${ports_1}    ${ports_2}    ${ports_3}
    ${port_range}=    evaluate    ','.join(${ports})
    ssh_pc    changsha
    Write    rm -rf ${handover_port_log}
    Write    ping -M do &{nanjing_pc}[inner_ip] -c ${exec_time} -i 0.2 > ${handover_port_log} 2>&1 &
    block_cpe_2wan_udp_port    changsha    ${port_range}
    ssh_pc    changsha
    run keyword and continue on failure    Get Valid Ping Logs_loss_less_than    ${handover_port_log}    91
    run keyword and continue on failure    icmp_last_packet_ok    ${handover_port_log}
    close connection
    [Teardown]    unblock_cpe_2wan_udp_port    changsha    ${port_range}

Block_POP_port_CPE_0_Change_Tunnel
    [Tags]    SDWANDEV-3683    abnormal
    ${pop_port}=    get_pop_tunnel_port_from_pop    remote    changsha
    ${pop_port2}=    get_pop_tunnel_port_from_pop    local    changsha
    ${ports}=    create list    ${pop_port}    ${pop_port2}
    ${port_range}=    evaluate    ','.join(${ports})
    ssh_pc    changsha
    Write    rm -rf ${handover_port_log}
    Write    ping -M do &{nanjing_pc}[inner_ip] -c ${exec_time} -i 0.2 > ${handover_port_log} 2>&1 &
    block_cpe_2wan_udp_port    changsha    ${port_range}    dports
    ssh_pc    changsha
    run keyword and continue on failure    Get Valid Ping Logs_loss_less_than    ${handover_port_log}    15
    run keyword and continue on failure    icmp_last_packet_ok    ${handover_port_log}
    close connection
    ${pop_port3}=    get_pop_tunnel_port_from_pop    remote    changsha
    ${pop_port4}=    get_pop_tunnel_port_from_pop    local    changsha
    should not be equal    ${pop_port3}    ${pop_port}
    should not be equal    ${pop_port4}    ${pop_port2}
    [Teardown]    unblock_cpe_2wan_udp_port    changsha    ${port_range}    dports

change_cpe_tunnel_port
    [Tags]    SDWANDEV-3681    abnormal
    update_cpe_tunnel_port_and_submit    changsha    6868
    wait until keyword succeeds    60s    1s    check_tunnel_port_change_cpe_and_pop    changsha    nanjing    ==6868
    wait until keyword succeeds    6x    200ms    Ensure_CPE_Flow_Work    changsha    office
    [Teardown]    change_cpe_tunnel_back_0

*** Keywords ***
get_pop_tunnel_port_from_pop
    [Arguments]    ${pop}    ${cpe}
    ${tunnel_states}=    get remote cpe tunnels from pop    ${pop}
    ${pop_tunnel_states}=    get lines containing string    ${tunnel_states}    (&{${cpe}_cpe}[chassis_id])
    ${match}    ${r_ip}    ${mid}    ${last}    ${port}=    should match regexp    ${pop_tunnel_states}
    ...    (([0-9]{1,3}\.){3}([0-9]{1,3})):([0-9]{3,4})
    [Return]    ${port}

icmp_last_packet_ok
    [Arguments]    ${log}
    Write    tail -n 10 ${log}
    ${res}=    read until prompt
    should contain    ${res}    icmp_seq=${exec_time}

get_cpe_tunnel_port_from_cpe
    [Arguments]    ${cpe}    ${r_ne}
    ${pwd}=    ssh_cpe    ${cpe}
    ${mnt_list}=    create_list
    ${tunnel_states}    write cpe cmd    ${cpe}    aiwan-ctl --tunnelStats|grep '\\-${r_ne}'    aiwan-ctl --tunnelStats|grep '\\-${r_ne}'    ${pwd}
    close connection
    ${states}    get lines containing string    ${tunnel_states}    port
    @{lines}=    split to lines    ${states}
    ${ports}=    create_list
    : FOR    ${line}    IN    @{lines}
    \    ${match}    ${r_ip}    ${mid}    ${last}    ${port}=    should match regexp
    \    ...    ${line}    (([0-9]{1,3}\.){3}([0-9]{1,3})):([0-9]{4,5})
    \    append to list    ${ports}    ${port}
    should not be empty    ${ports}
    [Return]    ${ports}

block_cpe_2wan_udp_port
    [Arguments]    ${cpe}    ${port_range}    ${sports}=sports
    ssh cpe    ${cpe}
    ${cmd}=    set variable    iptables -I OUTPUT \ -p udp -m multiport --${sports} ${port_range} -j DROP
    Write CPE CMD    ${cpe}    ${cmd}    ${cmd}
    close connection

unblock_cpe_2wan_udp_port
    [Arguments]    ${cpe}    ${port_range}    ${sports}=sports
    ssh cpe    ${cpe}
    ${cmd}=    set variable    iptables -D OUTPUT \ -p udp -m multiport --${sports} ${port_range} -j DROP
    Write CPE CMD    ${cpe}    ${cmd}    ${cmd}
    close connection

update_cpe_tunnel_port_and_submit
    [Arguments]    ${cpe}    ${tunnel_port}
    modify_cpe_tunnel_port    &{${cpe}_cpe}[minion_id]    ${tunnel_port}
    modify_company_version    ${suite_company_id}

check_tunnel_port_change_cpe_and_pop
    [Arguments]    ${cpe}    ${r_cpe}    ${expect_ports}
    ${ports_1}=    get_cpe_tunnel_port_from_cpe    ${cpe}    &{remote_pop}[ne_id]
    ${ports_2}=    get_cpe_tunnel_port_from_cpe    ${cpe}    &{local_pop}[ne_id]
    ${ports_3}=    get_cpe_tunnel_port_from_cpe    ${cpe}    &{${r_cpe}_cpe}[chassis_id]
    ${ports}=    combine lists    ${ports_1}    ${ports_2}    ${ports_3}
    : FOR    ${port}    IN    @{ports}
    \    should be true    ${port}${expect_ports}

change_cpe_tunnel_back_0
    update_cpe_tunnel_port_and_submit    changsha    0
    wait until keyword succeeds    60s    1s    check_tunnel_port_change_cpe_and_pop    changsha    nanjing    >30000
    wait until keyword succeeds    4x    200ms    Ensure_CPE_Flow_Work    changsha    office
