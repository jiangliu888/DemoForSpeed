*** Settings ***
Suite Setup       Suite Setup Steps
Suite Teardown
Resource          ../resource/UranusKeyword.txt

*** Variables ***
${expected_speed}    0.95
${expected_speed_private}    30
${expected_speed_sideway}    45
${expected_speed_gateway}    9.5
${expected_unit}    MB/s
${check_timeout}    40
${S1_http_40M_log}    Strategy2_http40M.log
${S1_http_1G_log}    Strategy2_http1G.log
${S1_http_512M_log}    Strategy2_http512M.log
${S1_Private_http_1G_log}    Strategy2_Private_http1G.log
${check_timeout_p}    30
${check_timeout_sideway}    60
${check_timeout_gateway}    110

*** Test Cases ***
Strategy2_Private_Http_Download_1G
    [Tags]    Http    1G    SDWANDEV-223    long
    ssh login remote
    Wait Until Keyword Succeeds    ${check_timeout_p}    0.5    Check Curl Process    1G
    Check Curl Download Speed    ${S1_Private_http_1G_log}    ${expected_speed_private}

Strategy2_Http_Download_40M
    [Tags]    Http    50M    SDWANDEV-217    long
    ssh login remote
    Wait Until Keyword Succeeds    ${check_timeout}    0.5    Check Curl Process    40M
    Check Curl Download Speed    ${S1_http_40M_log}    ${expected_speed}
    close connection

Sideway Strategy2 Http Download 1G
    [Tags]    Http    1G    SDWANDEV-817    Sideway    long
    ssh login wuhan
    Wait Until Keyword Succeeds    ${check_timeout_sideway}    0.5    Check Curl Process    1G
    Check Curl Download Speed    ${S1_http_1G_log}    ${expected_speed_sideway}
    close connection

Gateway Strategy2 Http Download 512M
    [Tags]    Http    1G    SDWANDEV-1782    Gateway    long
    wait until keyword succeeds    5s    100ms    gateway pingable check
    ssh login guangzhou
    ${rc}    ${stderr}=    execute command    pkill -9 curl    return_stderr=True
    should be empty    ${stderr}
    Write    curl -X GET http://anonymous@&{nanjing_pc}[inner_ip]/512M -o /dev/null > ${S1_http_512M_log} 2>&1 &
    read until prompt
    Wait Until Keyword Succeeds    ${check_timeout_gateway}    0.5    Check Curl Process    512M
    Check Curl Download Speed    ${S1_http_512M_log}    ${expected_speed_gateway}
    close connection

*** Keywords ***
Check Curl Process
    [Arguments]    ${file}
    Write    ps -ef | grep curl | grep ${file}|grep -v "grep"
    ${res}=    read until prompt
    should not contain    ${res}    curl

Check Curl Download Speed
    [Arguments]    ${test_log_file}    ${exp_speed}
    # print some of the log for review
    Write    tail ${test_log_file}
    ${res}=    read until prompt
    should not contain    ${res}    No such file or directory
    # judgement for case
    Write    cat ${test_log_file} | tail -n 1 | awk -F ' ' '{print $NF}'
    ${res}=    read until prompt
    ${res}=    Get Line    ${res}    0
    ${match}    ${speed}    ${speed_dec}    ${unit}=    should match regexp    ${res}    (\\d+(\.\\d+)?)(k|M)
    run keyword if    '${unit}' == 'k'    Should be true    ${exp_speed}*1024<= ${speed}    The download speed should be greater than ${expected_speed} ${expected_unit}
    ...    ELSE    Should be true    ${exp_speed}<= ${speed}    The download speed should be greater than ${exp_speed} ${expected_unit}

Suite Setup Steps
    Nping_From_PC    remote    &{local_pc}[inner_ip]
    Nping_From_PC    remote    &{local_pc}[inner_ip]
    SSH Login    &{remote_pc}[ctrl_ip]    &{remote_pc}[ctrl_port]    &{remote_pc}[user]    &{remote_pc}[passwd]
    ${rc}    ${stderr}=    execute command    pkill -9 curl    return_stderr=True
    should be empty    ${stderr}
    Write    rm -rf ${S1_http_40M_log} ${S1_Private_http_1G_log} 1G 40M
    read until prompt
    Write    curl -X GET http://&{local_pc}[inner_ip]/40M -o /dev/null > ${S1_http_40M_log} 2>&1 &
    read until prompt
    Write    curl -X GET http://&{local_pc}[intranet_ip]/1G -o /dev/null > ${S1_Private_http_1G_log} 2>&1 &
    read until prompt
    SSH Login Wuhan
    ${rc}    ${stderr}=    execute command    pkill -9 curl    return_stderr=True
    should be empty    ${stderr}
    Write    curl -X GET http://&{nanjing_pc}[inner_ip]/1G -o /dev/null > ${S1_http_1G_log} 2>&1 &
    read until prompt
