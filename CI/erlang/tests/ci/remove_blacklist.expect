#!/usr/bin/expect
#If it all goes pear shaped the script will timeout after 20 seconds.
set timeout 30
#First argument is assigned to the variable name
set name [lindex $argv 0]
#Second argument is assigned to the variable user
set user [lindex $argv 1]
#Third argument is assigned to the variable password
set password [lindex $argv 2]
set check_pc [lindex $argv 3]
#This spawns the telnet program and connects it to the variable name
spawn telnet $name
#The script expects login
expect "login:"
#The script sends the user variable
send "$user\n\r"
#The script expects Password
expect "Password:"
#The script sends the password variable
send "$password\r\n"
#This hands control of the keyboard over to you (Nice expect feature!)
expect "#"
send "host_ctrl -i 1 -t 5\r\n"
expect {
         -ex "+++ 192.168.17.200" {}
        timeout {
                send_user "exit 1\n"
                exit 1                   }
}
send "ipset del blacklist 192.168.17.100\r\n"
expect "#"
send "exit\r\n"
expect eof
spawn telnet $check_pc
#The script expects login
expect "login:"
#The script sends the user variable
send "$user\n\r"
#The script expects Password
expect "Password:"
#The script sends the password variable
send "$password\r\n"
#This hands control of the keyboard over to you (Nice expect feature!)
expect "#"
send "inet_ctrl -H 114.114.114.114 -i 1 -t 3\r\n"
expect {
         -ex "wlan5G  Yes     Yes" {}
        timeout {
                send_user "exit 1\n"
                exit 1                   }
}
send "exit\r\n"
expect eof
puts "all pass"
