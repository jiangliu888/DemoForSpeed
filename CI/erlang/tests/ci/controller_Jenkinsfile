#!groovy

pipeline {
    agent { label 'master' }

    stages {
        stage ('Build') {
            parallel {
                stage('build uranus') {
                    agent { label 'uranus' }
                    steps {
                        dir('src/uranus') {
                            git(url: 'ssh://dev@192.168.0.100:8011/uranus', branch: 'master', credentialsId: 'aac47fba-17c9-4426-9f2d-868eaebdc92c')
                        }

                        sh '''#!/bin/bash -l
                        echo "Start build aiwan uranus"
                        cd $WORKSPACE/src/uranus
                        chmod a+x ./build
                        ./build
                        if [ "$?" -ne 0 ];then
                            error 'Build aiwan uranus failure!'
                        fi
                        '''

                        archiveArtifacts allowEmptyArchive: true, artifacts: 'src/uranus/ci/aiwan-uranus*.deb', fingerprint: true
                    }
                }
            }
        }

        stage ('Deploy') {
            parallel {
                stage ('deploy uranus') {
                    agent { label 'master' }
                    steps {
                        copyArtifacts filter: '**/aiwan-uranus*.deb, ', target: 'deb', fingerprintArtifacts: true, flatten: true, projectName: '${JOB_NAME}', selector: specific('${BUILD_NUMBER}')

                        sh '''#!/bin/bash
                        ret=`sudo docker ps -a | grep uranus:v1 | wc -l`
                        if [ $ret -eq 1 ];then
                            sudo docker rm -f uranus
                        fi

                        cd ${WORKSPACE}/deb
                        sudo docker run -itd --name uranus -p 6652:6653 -p 6633:6633 -p 6640:6640 -p 8181:8181 -p 8101:8101 -p 9876:9876 -p 6116:6116 -p 5005:5005 uranus:v1
                        '''
                    }
                }
            }
        }
    }
}
